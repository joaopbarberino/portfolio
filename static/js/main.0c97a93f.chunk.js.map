{"version":3,"sources":["helpers/styles.js","components/AppContext.js","components/Header.js","components/HomeButton.js","sections/Home.js","sections/Who.js","sections/Skills.js","components/ProjectCard.js","sections/Projects.js","sections/Contact.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["colors","breakpoints","AppContext","React","createContext","AppProvider","Provider","Consumer","StyledNavbarContainer","styled","Container","StyledNavbarToggler","div","Header","useContext","language","toggleLanguage","mobile","useState","isOpen","setIsOpen","toggle","fluid","Navbar","color","expand","fixed","onClick","className","Collapse","navbar","Nav","data","header","map","nav","key","NavItem","NavLink","href","link","text","transition","StyledButton","a","HomeButton","props","role","icon","faLongArrowAltRight","StyledHomeContainer","StyledProfilePicContainer","StyledText","Home","id","title","home","imgTitle","alt","src","process","ReactHtmlParser","button","StyledWhoContainer","Who","faIdCard","who","element","StyledSkillsContainer","StyledStrengthsContainer","Skills","parsedStrengths","skills","strengths","strength","checked","setStrengths","faStar","ReactHTMLParser","onMouseOver","checkBar","name","size","faHandPointer","faMousePointer","Progress","bar","animated","value","StyledRow","Row","ProjectCard","project","index","Col","xs","lg","target","faExternalLinkAlt","img","StyledProjectsContainer","Projects","faProjectDiagram","projects","works","StyledContactContainer","Contact","faComments","contact","faLinkedinIn","faEnvelope","StyledFooterContainer","Footer","Date","getFullYear","window","scrollTo","faArrowUp","StyledBody","App","setLanguage","undefined","setMobile","resize","newState","innerWidth","parseInt","useEffect","addEventListener","removeEventListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c97a93f.chunk.js","sourcesContent":["export const colors = {\r\n    dark: '#252525',\r\n    light: '#f7f7f7',\r\n    pink: '#af1d57',\r\n    lightPink: '#c04c7a',\r\n    darkPink: '#6e1337'\r\n}\r\n\r\nexport const breakpoints = {\r\n    mobileMax: '991px', \r\n}","import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport const AppProvider = AppContext.Provider;\nexport const AppConsumer = AppContext.Consumer;\n\nexport default AppContext;","import React, { useState, useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Container\r\n} from 'reactstrap';\r\nimport AppContext from './AppContext';\r\nimport data from '../helpers/data.json';\r\nimport { colors, breakpoints } from '../helpers/styles';\r\n\r\nconst StyledNavbarContainer = styled(Container)`\r\n  font-family: 'Quicksand', sans-serif;\r\n  .navbar {\r\n    background-color: ${colors.dark};\r\n    padding: 0;\r\n\r\n    .nav-item {\r\n      a {\r\n        transition: all .2s;\r\n        padding: 15px 20px;\r\n        color: ${colors.pink}; \r\n        font-size: 14pt;\r\n      }\r\n      \r\n      &:hover:not(.mobile-language-button) {\r\n        background-color: ${colors.pink};\r\n        a {\r\n          color: ${colors.light};\r\n          font-size: 16pt;\r\n          padding: 20px 25px;\r\n        }\r\n      }\r\n\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n\r\n    .mobile-language-button {\r\n      position: absolute;\r\n      right: 5px;\r\n      top: 5px;\r\n      list-style: none;\r\n    }\r\n  }\r\n\r\n  .navbar {\r\n    border-bottom: 2px solid ${colors.pink};\r\n  }\r\n`;\r\n\r\nconst StyledNavbarToggler = styled.div`\r\n  @media (max-width: ${breakpoints.mobileMax}) {\r\n    margin: 20px;\r\n    padding-top: 5px;\r\n    cursor: pointer;\r\n\r\n    div {\r\n      transition: all 0.3s;\r\n      background-color: ${colors.pink};\r\n    }\r\n\r\n    .bar1, .bar2, .bar3 {\r\n      width: 30px;\r\n      height: 2px;\r\n      margin-bottom: 8px;\r\n    }\r\n\r\n    .animation1, .animation3 {\r\n      width: 30px;\r\n      height: 2px;\r\n    }\r\n\r\n    .animation1 {\r\n      margin-top: 5px;\r\n      margin-bottom: 10px;\r\n      transform: rotate(45deg);\r\n    }\r\n\r\n    .animation3 {\r\n      margin-top: -12px;\r\n      margin-bottom: 4px;\r\n      transform: rotate(-45deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  const { language, toggleLanguage, mobile } = useContext(AppContext);\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => mobile ? setIsOpen(!isOpen) : false;\r\n\r\n  return (\r\n    <StyledNavbarContainer fluid>\r\n      <Navbar color={colors.dark} expand='lg' fixed='top'>\r\n        <Container>\r\n          <StyledNavbarToggler onClick={toggle}>\r\n            <div className={isOpen ? 'animation1' : 'bar1'} />\r\n            <div className={isOpen ? '' : 'bar2'} />\r\n            <div className={isOpen ? 'animation3' : 'bar3'} />\r\n          </StyledNavbarToggler>\r\n\r\n          <Collapse isOpen={isOpen} navbar>\r\n            <Nav className='w-100 justify-content-between' navbar>\r\n              {\r\n                data[language].header.map((nav, key) => {\r\n                  return (\r\n                    <NavItem key={key}>\r\n                      <NavLink href={nav.link} onClick={toggle}>{nav.text}</NavLink>\r\n                    </NavItem>\r\n                  );\r\n                })\r\n              }\r\n\r\n              <NavItem\r\n                className='d-none d-md-block'\r\n                onClick={() => toggleLanguage()}\r\n              >\r\n                <NavLink href='#'>\r\n                  {language === 'en' ? 'PT' : 'EN'}\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n          <NavItem\r\n            className='d-md-none mobile-language-button'\r\n            onClick={() => toggleLanguage()}\r\n          >\r\n            <NavLink href='#'>\r\n              {language === 'en' ? 'PT' : 'EN'}\r\n            </NavLink>\r\n          </NavItem>\r\n        </Container>\r\n      </Navbar>\r\n    </StyledNavbarContainer>\r\n  );\r\n}\r\n\r\nexport default Header;","// Adptade from: https://codepen.io/Shtam3x/pen/Bevpxd\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../helpers/styles'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLongArrowAltRight } from '@fortawesome/free-solid-svg-icons';\n\nconst speed = '.3s';\nconst transition = `all ${ speed } cubic-bezier(0.310, -0.105, 0.430, 1.400)`;\n\nconst StyledButton = styled.a`\n\tdisplay: block;\n\tbackground-color: ${colors.darkPink};\n\twidth: 300px;\n\theight: 70px;\n\tline-height: 70px;\n\tmargin: 75px auto;\n\tcolor: ${colors.light};\n\tposition: relative;\n\ttop: 0;\n\tbottom: 0;\n\tleft: 0;\n\tright: 0;\n\tcursor: pointer;\n\toverflow: hidden;\n\t/* box-shadow: 0 0 20px 0 rgba(0,0,0,.3); */\n\ttransition: ${transition};\n\t\n\tspan,\n\t.icon {\n\t\tdisplay: block;\n\t\theight: 100%;\n\t\ttext-align: center;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t}\n\t\n\tspan {\n\t\twidth: 72%;\n\t\tline-height: inherit;\n\t\tfont-size: 22px;\n\t\ttext-transform: uppercase;\n\t\tleft: 0;\n\t\ttransition: ${transition};\n\t\t\n\t\t&:after {\n\t\t\tcontent: '';\n\t\t\tbackground-color: ${colors.pink};\n\t\t\twidth: 2px;\n\t\t\theight: 70%;\n\t\t\tposition: absolute;\n\t\t\ttop: 15%;\n\t\t\tright: -1px;\n\t\t}\n\t}\n\t\n\t.icon {\n\t\twidth: 28%;\n\t\tright: 0;\n\t\ttransition: ${transition};\n\t\t\n\t\t.svg-inline--fa {\n\t\t\tfont-size: 30px;\n\t\t\tvertical-align: middle;\n\t\t\ttransition: ${transition}, height ${speed} ease;\n\t\t}\n\t\t\n\t\t.fa-long-arrow-alt-right {\n\t\t\theight: 36px;\n\t\t}\n\t}\n\t\n\t&:hover {\n\t\t\n\t\tspan {\n\t\t\tleft: -72%;\n\t\t\topacity: 0;\n\t\t}\n\t\t\n\t\t.icon {\n\t\t\twidth: 100%;\n\t\t\t\n\t\t\t.svg-inline--fa {\n\t\t\t\tfont-size: 45px;\n\t\t\t}\n\t\t}\n\t}\n\t\n\t&:hover {\n\tbox-shadow: 0 0 20px 0 rgba(0,0,0,.3);\n\t\t/* opacity: .7; */\n        color: ${colors.light};\n        background-color: ${colors.pink};\n        \n\t\t.icon .fa-long-arrow-alt-right {\n\t\t\theight: 46px;\n\t\t}\n\t}\n\t\n\t&:active {\n\t\topacity: 1;\n\t}\n`;\n\nconst HomeButton = props => {\n    return (\n        <StyledButton href='#who' role='button'>\n            <span>{props.text}</span>\n            <div className='icon'>\n                <FontAwesomeIcon icon={faLongArrowAltRight} />\n            </div>\n        </StyledButton>\n    )\n}\n\nexport default HomeButton;","import React, { useContext } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport styled from 'styled-components';\nimport { colors, breakpoints } from '../helpers/styles';\nimport data from '../helpers/data.json';\nimport { Container } from 'reactstrap';\nimport AppContext from '../components/AppContext';\nimport HomeButton from '../components/HomeButton';\n\nconst StyledHomeContainer = styled(Container)`\n    text-align: center;\n    color: ${colors.light};\n`;\n\nconst StyledProfilePicContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-top: 150px;\n\n    div {\n        transition: all .2s;\n        position: absolute;\n        height: 260px;\n        width: 500px;\n        background-color: ${colors.pink};\n\n        &:hover {\n            width: 600px;\n        }\n    }\n\n    img {\n        transition: all .2s;\n        position: relative;\n        width: 300px;\n        border: 5px solid ${colors.pink};\n        border-radius: 4px;\n\n        &:hover {\n            width: 350px;\n        }\n    }\n\n    @media (max-width: ${breakpoints.mobileMax}) {\n        div, div:hover {\n            top: 0;\n            width: 100%;\n            height: 320px;\n        }\n\n        img:hover {\n            width: 300px;\n        }\n    }\n`;\n\nconst StyledText = styled.div`\n    margin-top: 70px;\n\n    p {\n        font-size: 20pt!important;\n        margin: 0;\n    }\n`;\n\nconst Home = () => {\n    const { language } = useContext(AppContext);\n\n    return (\n        <StyledHomeContainer id='home'>\n            <StyledProfilePicContainer>\n                <div></div>\n                <img\n                    title={data[language].home.imgTitle}\n                    alt={data[language].home.imgTitle}\n                    src={process.env.PUBLIC_URL + '/img/profile.jpg'}\n                />\n            </StyledProfilePicContainer>\n            <StyledText>\n                {data[language].home.text.map((text, key) => {\n                    return (\n                        <p key={key}>\n                            {ReactHtmlParser(text)}\n                        </p>\n                    );\n                })}\n            </StyledText>\n            <HomeButton text={data[language].home.button} />\n        </StyledHomeContainer>\n    );\n}\n\nexport default Home;","import React, { useContext } from 'react';\nimport ReactHtmlParser from 'react-html-parser';\nimport styled from 'styled-components';\nimport AppContext from '../components/AppContext';\nimport data from '../helpers/data.json';\nimport { colors } from '../helpers/styles';\nimport { Container } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faIdCard } from '@fortawesome/free-solid-svg-icons';\n\nconst StyledWhoContainer = styled(Container)`\n    color: ${colors.light};\n    text-align: justify;\n    padding-top: 90px;\n`;\n\nconst StyledText = styled.div`\n    border-left: 3px solid ${colors.pink};\n    padding-left: 20px;\n    margin-top: 30px;\n\n    p {\n        margin-bottom: 25px;\n        font-size: 16pt;\n    }\n`;\n\nconst Who = () => {\n    const { language } = useContext(AppContext);\n\n    return (\n        <StyledWhoContainer id='who'>\n            <h1>\n                <FontAwesomeIcon icon={faIdCard} />{data[language].who.title}\n            </h1>\n            <StyledText>\n                {\n                    data[language].who.text.map((element, key) => {\n                        return (\n                            <p key={key}>\n                                {ReactHtmlParser(element)}\n                            </p>\n                        );\n                    })\n                }\n            </StyledText>\n        </StyledWhoContainer>\n    )\n}\n\nexport default Who;","import React, { useContext, useState } from 'react';\nimport ReactHTMLParser from 'react-html-parser';\nimport styled from 'styled-components';\nimport { Container, Progress } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStar, faMousePointer, faHandPointer } from '@fortawesome/free-solid-svg-icons';\nimport data from '../helpers/data.json';\nimport { colors } from '../helpers/styles';\nimport AppContext from '../components/AppContext';\n\nconst StyledSkillsContainer = styled(Container)`\n    padding-top: 90px;\n\n    p {\n        margin-top: 30px;\n        color: ${colors.light};\n        text-align: center;\n    }\n`;\n\nconst StyledStrengthsContainer = styled.div`\n    svg {\n        margin-top: 8px;\n        margin-right: 8px;\n        color: ${colors.lightPink};\n        position: absolute;\n        right: 0;\n        transition: all 1s;\n    }\n\n    .opacity-0 {\n        opacity: 0;\n    }\n\n    .strength {\n        font-size: 18pt;\n        color: ${colors.light};\n        margin-bottom: 20px;\n\n        .progress-container {\n            margin-top: 5px;\n            border: 3px solid ${colors.pink};\n            position: relative;\n\n            /* padding: 3px; */\n            \n            .progress-bar {\n                /* border: 2px solid ${colors.pink}; */\n                height: 35px;\n                background-color: ${colors.pink};\n                transition: all 1.5s;\n            }\n\n            .progress-bar-animated {\n                animation-duration: 2s;\n            }\n            .progress-bar-striped {\n                background-size: 32px 1px\n            }\n        }\n        \n        sup {\n            top: 0;\n            font-size: 9pt;\n        }\n    }\n`;\n\nconst Skills = () => {\n    const { language, mobile } = useContext(AppContext);\n\n    const parsedStrengths = [];\n    for (let language in data) {\n        parsedStrengths[language] = data[language].skills.strengths.map(strength => strength = { ...strength, checked: false });\n    }\n    const [strengths, setStrengths] = useState(parsedStrengths);\n\n    const checkBar = key => {\n        for (let language in data) {\n            strengths[language][key].checked = true;\n        }\n        setStrengths({ ...strengths });\n    }\n\n    return (\n        <StyledSkillsContainer id='skills'>\n            <h1>\n                <FontAwesomeIcon icon={faStar} />{data[language].skills.title}\n            </h1>\n            <p>\n                {ReactHTMLParser(data[language].skills.text)}\n            </p>\n            <StyledStrengthsContainer>\n                {\n                    strengths[language].map((strength, key) => {\n                        return (\n                            <div\n                                key={key}\n                                className='strength'\n                                onMouseOver={() => checkBar(key)}\n                            >\n                                {ReactHTMLParser(strength.name)}\n                                <div className='progress-container'>\n                                    {(key === 0) &&\n                                        <FontAwesomeIcon\n                                            size='xs'\n                                            icon={mobile ? faHandPointer : faMousePointer}\n                                            className={strengths[language][key].checked ? 'opacity-0' : ''}\n                                        />\n                                    }\n                                    <Progress\n                                        bar\n                                        animated\n                                        value={strength.checked ? strength.value : 0}\n                                    />\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n            </StyledStrengthsContainer>\n        </StyledSkillsContainer >\n    );\n}\n\nexport default Skills;","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Row, Col } from 'reactstrap';\nimport { colors, breakpoints } from '../helpers/styles';\nimport AppContext from './AppContext';\n\nconst StyledRow = styled(Row)`\n    margin-bottom: 50px;\n\n    .order-1 {\n        order: 1;\n    }\n\n    .order-2 {\n        order: 2;\n    }\n\n    img {\n        width: 100%;\n        transition: all .5s;\n        z-index: 1;\n        \n        &.border-right-rd {\n            border-bottom-right-radius: 90px; \n        }\n\n        &.border-left-rd {\n            border-bottom-left-radius: 90px;\n        }\n    }\n\n    img + svg {\n        position: absolute;\n        color: ${colors.light};\n        bottom: 10px;\n        transition: all .2s;\n\n        &.right {\n            right: 10px;\n        }\n\n        &.left {\n            left: 10px;\n        }\n    }\n\n    h3 {\n        color: ${colors.lightPink};\n    }\n\n    .opacity-0 {\n        opacity: 0;\n    }\n\n    a {\n        text-decoration: none;\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    span {\n        position: absolute;\n        font-size: 16pt;\n        color: ${colors.light};\n        align-self: center;\n\n    }\n\n    .img-container {\n        background-color: ${colors.pink};\n        border: 2px solid ${colors.pink};\n        position: relative;\n\n        &:hover {\n            img {\n                opacity: 0;\n                border-bottom-right-radius: 0;\n                border-bottom-left-radius: 0;\n            }\n            \n            img + svg {\n                opacity: 0;\n                bottom: 2px;\n\n                &.right {\n                    right: 2px;\n                }\n\n                &.left {\n                    left: 2px;\n                }\n            }\n        }\n    }\n\n    @media(max-width: ${breakpoints.mobileMax}) {\n        span {\n            font-size: 12pt;\n        }\n\n        .img-container {\n            margin-bottom: 30px;\n        }\n    }\n`;\n\nconst ProjectCard = ({ project, index }) => {\n    const { mobile } = useContext(AppContext);\n\n    return (\n        <StyledRow>\n            <Col\n                className={mobile ? 'order-1' : index % 2 === 0 ? 'order-1' : 'order-2'}\n                xs={12}\n                lg={5}\n            >\n                <div className='img-container'>\n                    <a href={project.link} target='__blank'>\n                        <span>{project.link} <sup><FontAwesomeIcon icon={faExternalLinkAlt} size='xs' /></sup></span>\n                        <img\n                            alt={project.link}\n                            className={mobile ? 'border-right-rd' : index % 2 === 0 ? 'border-right-rd' : 'border-left-rd'}\n                            src={process.env.PUBLIC_URL + project.img}\n                        />\n                        <FontAwesomeIcon\n                            size='xs'\n                            className={mobile ? 'right' : index % 2 === 0 ? 'right' : 'left'}\n                            icon={faExternalLinkAlt}\n                        />\n                    </a>\n                </div>\n            </Col>\n            <Col\n                className={mobile ? 'order-2' : index % 2 === 0 ? 'order-2' : 'order-1 text-right'}\n                xs={12}\n                lg={7}\n            >\n                <h3>{project.name}</h3>\n                <p className='text-justify'>{project.text}</p>\n            </Col>\n        </StyledRow>\n    );\n}\n\nexport default ProjectCard;","import React, { useContext } from 'react';\nimport ReactHTMLParser from 'react-html-parser';\nimport styled from 'styled-components';\nimport { Container } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faProjectDiagram } from '@fortawesome/free-solid-svg-icons';\nimport data from '../helpers/data.json';\nimport { colors } from '../helpers/styles';\nimport AppContext from '../components/AppContext';\nimport ProjectCard from '../components/ProjectCard';\n\nconst StyledProjectsContainer = styled(Container)`\n    padding-top: 90px;\n\n    p {\n        margin-bottom: 50px;\n        text-align: center;\n        color: ${colors.light};\n    }\n\n`;\n\nconst Projects = () => {\n    const { language } = useContext(AppContext);\n\n    return (\n        <StyledProjectsContainer id='projects'>\n            <h1>\n                <FontAwesomeIcon icon={faProjectDiagram} />{data[language].projects.title}\n            </h1>\n            <p>\n                {ReactHTMLParser(data[language].projects.text)}\n            </p>\n\n            {\n                data[language].projects.works.map((project, key) => {\n                    return <ProjectCard key={key} project={project} index={key} />\n                })\n            }\n\n        </StyledProjectsContainer>\n    );\n}\n\nexport default Projects;","import React, { useContext } from 'react';\nimport ReactHTMLParser from 'react-html-parser';\nimport styled from 'styled-components';\nimport { Container, Col, Row } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons';\nimport data from '../helpers/data.json';\nimport { colors } from '../helpers/styles';\nimport AppContext from '../components/AppContext';\n\nconst StyledContactContainer = styled(Container)`\n    padding-top: 90px;\n    padding-bottom: 90px;\n\n    p {\n        margin-top: 20px;\n        color: ${colors.light};\n        text-align: center;\n    }\n\n    .row {\n        text-align: center;\n\n        a {\n            padding: 40px 20px 10px;\n            margin-right: 25px;\n            margin-left: 25px;\n            transition: all .5s;\n\n            &:hover {\n                border-radius: 10px;\n                background-color: ${colors.pink};\n                padding: 50px 30px 20px;\n\n                svg {\n                    color: ${colors.light}\n                }\n            }\n        }\n\n        svg {\n            transition: all .5s;\n            color: ${colors.lightPink};\n            width: 50px;\n            height: 50px;\n        }\n    }\n`;\n\n\nconst Contact = () => {\n    const { language } = useContext(AppContext);\n\n    return (\n        <StyledContactContainer id='contact'>\n            <h1><FontAwesomeIcon icon={faComments} />{data[language].contact.title}</h1>\n            <p>{ReactHTMLParser(data[language].contact.text)}</p>\n            <Row>\n                <Col xs={12}>\n                    <p>\n                        <a href='https://www.linkedin.com/in/joao-pedro-barberino-silva/' target='__blank'>\n                            <FontAwesomeIcon icon={faLinkedinIn} />\n                        </a>\n                        <a href='mailto:joao.p.barberino@gmail.com'>\n                            <FontAwesomeIcon icon={faEnvelope} />\n                        </a>\n                    </p>\n                </Col>\n            </Row>\n        </StyledContactContainer>\n    )\n}\n\nexport default Contact;","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '../helpers/styles';\nimport { Container } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\n\nconst StyledFooterContainer = styled(Container)`\n    background-color: ${colors.darkPink};\n    text-align: center;\n    padding: 12px 0 3px;\n\n    h5 {\n        font-size: 12pt;\n        color: ${colors.lightPink};\n    }\n\n    .container {\n        position: relative;\n\n        button {\n            transition: all .5s;\n            padding: 5px 10px;\n            position: absolute;\n            right: 2px;\n            top: -9px;\n            background-color: ${colors.lightPink};\n            border: 1px solid ${colors.darkPink};\n            border-radius: 5px;\n\n            svg {\n                color: ${colors.light}\n            }\n\n            &:focus {\n                outline: none;\n            }\n\n            &:hover {\n                top: -20px;\n            }\n        }\n    }\n`;\n\nconst Footer = () => {\n    return (\n        <StyledFooterContainer fluid>\n            <Container>\n                <h5><span>João Pedro Barberino</span> ©‎ {(new Date()).getFullYear()}</h5>\n                <button onClick={() => window.scrollTo(0, 0)}><FontAwesomeIcon icon={faArrowUp} /></button>\n            </Container>\n        </StyledFooterContainer>\n    );\n}\n\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport './index.scss'\nimport { colors, breakpoints } from './helpers/styles';\nimport { AppProvider } from './components/AppContext';\n\nimport Header from './components/Header';\nimport Home from './sections/Home';\nimport Who from './sections/Who';\nimport Skills from './sections/Skills';\nimport Projects from './sections/Projects';\nimport Contact from './sections/Contact';\nimport Footer from './components/Footer';\n\nconst StyledBody = styled.div`\n  background-color: ${colors.dark};\n  color: ${colors.light};\n  height: 200vh;\n  font-family: 'Quicksand', sans-serif;\n\n  p {\n    font-size: 16pt;\n    \n    span {\n      color: ${colors.lightPink};\n    }\n  }\n\n  h1 {\n    color: ${colors.lightPink};\n\n    svg {\n      margin-right: 20px;\n    }\n}\n`;\n\nfunction App() {\n  const [language, setLanguage] = useState('en');\n  const [mobile, setMobile] = useState(undefined);\n  const toggleLanguage = () => {\n    setLanguage(language => (language === 'en' ? 'pt' : 'en'));\n  }\n\n  const resize = () => {\n    const newState = window.innerWidth <= parseInt(breakpoints.mobileMax);\n    if (mobile !== newState) {\n      setMobile(newState);\n    }\n  }\n\n  useEffect(() => {\n    resize();\n    window.addEventListener('resize', resize);\n\n    return function cleanup() {\n      window.removeEventListener('resize', resize);\n    }\n  });\n\n  return (\n    <AppProvider value={{ language, toggleLanguage, mobile }}>\n      <StyledBody>\n        <Header />\n        <Home />\n        <Who />\n        <Skills />\n        <Projects />\n        <Contact />\n        <Footer />\n      </StyledBody>\n    </AppProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}